services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    container_name: clinic_ui
    working_dir: /app
    environment:
      - HOST=0.0.0.0
      - VITE_API_BASE_URL=http://localhost:9000/api
      - VITE_CLINIC_NAME=HealthPlus Clinic
      - VITE_THEME=light
      - VITE_DEFAULT_LANGUAGE=en
    command: npm run dev

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: clinic_backend
    working_dir: /app
    ports:
      - "9000:9000"
    depends_on:
      postgres:
        condition: service_started
      redis-host:
        condition: service_started
      rabbitmq:
        condition: service_started
    environment:
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/mydb?sslmode=disable
      REDIS_HOST: redis-host:6379
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
    networks:
      - backend
    volumes:
      - ./backend:/app
    restart: on-failure

  postgres:
    image: postgres:16
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Quockhanh208@
      POSTGRES_DB: clinic
    ports:
      - "5432:5432"
    networks:
      - backend
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis-host:
    image: redis:7
    container_name: redis-host
    restart: always
    ports:
      - "6379:6379"
    networks:
      - backend
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"   # AMQP
      - "15672:15672" # RabbitMQ management UI
    networks:
      - backend
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

networks:
  backend:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:

